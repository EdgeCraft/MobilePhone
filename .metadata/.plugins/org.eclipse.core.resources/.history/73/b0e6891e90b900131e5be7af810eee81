package org.exodevil.MobilePhone.commands;

import java.sql.PreparedStatement;

import net.edgecraft.edgeconomy.EdgeConomyAPI;
import net.edgecraft.edgeconomy.economy.BankAccount;
import net.edgecraft.edgeconomy.economy.Economy;
import net.edgecraft.edgeconomy.economy.EconomyPlayer;
import net.edgecraft.edgecore.EdgeCoreAPI;
import net.edgecraft.edgecore.system.EdgeCraftSystem;
import net.edgecraft.edgecore.user.UserManager;

import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;
import org.exodevil.MobilePhone.MobilePhone;
import org.exodevil.MobilePhone.Phonebook;

public class BuyMobileCommand implements CommandExecutor {
	
	final UserManager userManager = EdgeCoreAPI.userAPI();
	final Economy economy = EdgeConomyAPI.economyAPI();
	final EdgeCraftSystem EdgeSystem = EdgeCoreAPI.systemAPI();

	public boolean onCommand(CommandSender cmds, Command cmd, String label,	String[] args) {
		if (!(cmds instanceof Player)) {
			cmds.sendMessage("This command is not applicable for console");
			return true;
		} else {
			Player p = (Player) cmds;
			ItemStack inHand = p.getItemInHand();
			EconomyPlayer ep = economy.getEconomyPlayer(e.getPlayer().getName());
			BankAccount acc = economy.getAccount(e.getPlayer().getName());
			double Handykosten = this.plugin.getConfig().getInt("handy.kosten");
			
			if (inHand == null){
				String hasnumber = MobilePhone.getInstance().getConfig().getString("numbern." + playerName + "number");
				if (hasnumber != null){
					payMobile(playerName, acc, ep, Handykosten, EdgeSystem);
					p.sendMessage("Deine Handynumber lautet: "  + hasnumber);
				} else {
					String number = generatenumber(playerName);
					payMobile(playerName, acc, ep, Handykosten, EdgeSystem);
					p.sendMessage("Glückwunsch. Du hast dir dein erstes Handy gekauft");
					p.sendMessage("Deine Handynumber lautet: " + number);
					int id = userManager.getUser(p.getName()).getID();
					PreparedStatement registerNumber = db.prepareUpdate("INSERT INTO mobilephone_contracts (id, number) VALUES (?, default);");
					registerNumber.setInt(1, id);
					registerNumber.setString(2, number);
					
					registerNumber.executeUpdate();
					
					Phonebook.synchronizeUsers();
					
					
				}
			}else {
				p.sendMessage("Bitte wähle einen freien Platz in deiner Hotbar aus!");
			}
			return true;
		}
	}
}
